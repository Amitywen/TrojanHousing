<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>APPLY</title>
    <script>
        document.addEventListener('DOMContentLoaded', async() => {
            const url = new URL(window.location.href)
            const propertyId = url.pathname.split('/')[2];
            console.log(propertyId)

            ApplyForm.addEventListener('submit', async (event) => {
                event.preventDefault(); // Prevent the default form submission

                // Perform your client-side validation here
                // const propertyId = document.getElementById('propertyId');
                const url = new URL(window.location.href)
                const propertyId = url.pathname.split('/')[2];
                const studentId = document.getElementById('studentId');

                // Construct the request body
                const requestBody = {
                    propertyId: propertyId.value,
                    studentId: studentId.value,
                };

                // Send the data to the server using fetch
                try {
                    const response = await fetch(`/api/application`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(requestBody),
                    });

                    if (response.ok) {
                        // Form submission successful, you can redirect the user
                        window.location.href = '/student/list_property.html';
                        // checknig the the href is right or not.
                    } else {
                        const errorData = await response.json();
                        alert(`Server Error: ${errorData.message}`);
                    }
                } catch (error) {
                    alert('An error occurred while communicating with the server.');
                }
            });
        });
    </script>
    <style>
         .whole-page-background-image{
            height: 80vh;
            width: 100vw;
            background-image: url('/images/USC_Village.jpg');
            /* background-color: rgba(255,255,255,0.5); */
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
        }
        .whole-page-background-color{
            height: 80vh;
            width: 100vw;
            /* background-image: url('/images/USC_great_lawn.jpg'); */
            background-color: rgba(255,255,255,0.6);
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
        }
        .admin-list {
            width: 1200px; /* Adjust the width as needed */
            height: 800px; /* Adjust the height as needed */
            margin: auto; /* Center the element horizontally */
            margin-top: 0px; /* Adjust the margin-top to center vertically */
            border: 2px solid #ffffff; /* Border color (black in this case) */
            border-radius: 10px; /* Border radius to create a circle */
            background-color: rgba(250, 246, 229, 0.8); /* Light beige background color */
            padding: 5px; /* Adjust the padding as needed */
            box-sizing: border-box; /* Include padding and border in the element's total width and height */
            display: flex;
            justify-content: center;
            align-items: top;
        }
         #search-box {
            padding: 5px;
            font-size: 16px;
        }

        #search-button {
            padding: 5px;
            font-size: 16px;
        }
        .styled-table {
            border-collapse: collapse;
            width: 100%;
        }

        .styled-table th,
        .styled-table td {
            border: 1px solid #dddddd;
            text-align: left;
            padding: 8px;
        }

        .styled-table th {
            background-color: #f2f2f2;
        }
        .admin-page-title{           
            /* margin-top: 20px; */
            font-size: 36px; /* Increase the font size */
            color: #333; /* Set a specific text color */
            text-align: center; /* Center the text */
            text-transform: uppercase; /* Convert text to uppercase */
            margin-top: 20px; /* Add some top margin */
            margin-bottom: 20px; /* Add some bottom margin */
            /* Add more styles as needed */

        }
        .error-message{           
            /* margin-top: 20px; */
            font-size: 15px; /* Increase the font size */
            color: rgb(255,0,0); /* Set a specific text color */
            text-align: center; /* Center the text */
            margin-top: 20px; /* Add some top margin */
            margin-bottom: 20px; /* Add some bottom margin */
            /* Add more styles as needed */

        }
        .admin-list {
            width: 1200px; /* Adjust the width as needed */
            height: 800px; /* Fixed height to prevent stretching */
            overflow-y: auto; /* Add a scrollbar if the content overflows vertically */
            margin: auto; /* Center the element horizontally */
            margin-top: 0px; /* Adjust the margin-top to center vertically */
            border: 2px solid #ffffff; /* Border color (black in this case) */
            border-radius: 10px; /* Border radius to create a circle */
            background-color: rgba(250, 246, 229, 0.8); /* Light beige background color */
            padding: 5px; /* Adjust the padding as needed */
            box-sizing: border-box; /* Include padding and border in the element's total width and height */
            display: flex;
            flex-direction: column; /* Stack child elements vertically */
            justify-content: flex-start; /* Align child elements to the start of the container */
            align-items: center; /* Center child elements horizontally */
        }
        .admin-button{
            width: 200px; /* Adjust the width as needed */
            height: 30px; /* Adjust the height as needed */
            background-color: #990000; /* Light beige background color */
            color:#ffffff;
            display: block;
            margin: auto; /* Center the button horizontally */
        }


       
    </style>
    <!-- <link rel="stylesheet" href="/styles.css"> Add any additional styles if needed -->
</head>

<body>
    <div class="whole-page-background-color">

        <div class="admin-list">
        <% if (property && property.length > 0) { %>
            <table id="user-list" class="styled-table">
                <thread>
                    <th>landlordId</th>
                    <th>address</th>
                    <th>number OfRooms</th>
                    <th>rent</th>
                    <th>securityDeposit</th>
                    <th>summary</th>
                    <th>location</th>
                </thread>
                <% property.forEach(user => { %>
                    <tr name="user" style="height: 20px">
                        <% property.forEach((unit) => { %>
                            <tr>
                                <td><%= unit._id %></td>
                                <td><%= unit.address %></td>
                                <td><%= unit.numberOfRooms %></td>
                                <td><%= unit.rent %></td>
                                <td><%= unit.securityDeposit %></td>
                                <td><%= unit.summary %></td>
                                <td><%= unit.location %></td>
                            </tr>
                        <% }) %>
                        <!-- <td style="padding-right: 10px"><a href="/user/<%= user.id %>/edit.html">Edit</a></td> -->
                        <!-- <td><button class="deleteButton" data-student-id="<%= user._id %>">Delete</button></td> -->
                    </tr>
                <% }); %>
            </table>
        <% } else { %>
            <p>No property available.</p>
        <% } %>
        <!-- create new user link button -->
        <!-- <button class="admin-button"><a href="/admin/students/create.html">Create New Student User</a></button> -->

        <form id="ApplyForm" action="/api/application" method="POST">
            <p>Please enter your userID and submit it after reviewing.</p>
            <label for="studentId">studentId:</label>
            <input type="text" id="studentId" name="studentId" required>
            <br>
            <br>
            <!-- <input type="hidden" name="redirect" value="/players.html"> -->
            <button type="submit"> Submit </button>
        </form>
        </div>
    </div>
    <script>
    

/** perform delete user and refresh page after deletion success */

    </script>
</body>

</html>
