<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Player List</title>
    <style>
         #search-box {
            padding: 5px;
            font-size: 16px;
        }

        #search-button {
            padding: 5px;
            font-size: 16px;
        }
    </style>
    <!-- <link rel="stylesheet" href="/styles.css"> Add any additional styles if needed -->
</head>

<body>
    <h1>Player List</h1>
    <div>
        <label for="search-box">Search: </label>
        <input type="text" id="search-box" name="query" placeholder="Search by keyword in first and last name...">
    </div>

    <% if (players.length > 0) { %>
        <table id="player-table">
            <thread>
                <th style="padding-right: 10px">#</th>
                <th style="padding-right: 10px">ID</th>
                <th style="padding-right: 10px">Name</th>
                <th style="padding-right: 10px">Handed</th>
                <th style="padding-right: 10px">Balance</th>
                <th style="padding-right: 10px">Active</th>
                <th>    </th>
            </thread>
            <% let rowCount = 1; %>
            <% players.forEach(player => { %>
                <tr name="player-list">
                    <td style="padding-right: 10px"><%=  rowCount %></td> 
                    <td style="padding-right: 10px"><%= player.pid %></td>
                    <td style="padding-right: 10px"><%= player.name %></td>
                    <td style="padding-right: 10px"><%= player.handed %></td>
                    <td style="padding-right: 10px"><%= player.balance_usd_cents %></td>
                    <td style="padding-right: 10px"><%= player.is_active %></td>
                    <td><a href="/player/<%= player.pid %>/edit.html">Edit</a></td>
                </tr>
                <% rowCount++; %>
            <% }); %>
        </table>
    <% } else { %>
        <p>No players available.</p>
    <% } %>

    <a href="/player/create.html">Create New Player</a>

    <script>
        // Add any additional client-side scripts if needed
        document.getElementById('search-box').addEventListener('keyup', (event) => {
        const searchQuery = event.target.value;
        console.log('searchQuery is: ',searchQuery)
        return fetch(`/api/player?q=${encodeURIComponent(searchQuery)};fname,lname`, {
          method: 'GET'
        })
        .then(r => r.json())
        .then(replacePlayerList);  // defined below
      });

      function replacePlayerList(players) {
    console.log('new player list is: ', players);

    // Get the existing table body
    const tableBody = document.querySelector('#player-table tbody');

    // Clear the existing table body content
    tableBody.innerHTML = '';

    // Add new rows based on the updated player list
    players.forEach((player, index) => {
        const newRow = tableBody.insertRow(index);
        newRow.setAttribute('name', 'player-list');

        const cells = [
            index + 1,
            player.pid,
            player.name,
            player.handed,
            player.balance_usd_cents,
            player.is_active,
            `<a href="/player/${player.pid}/edit.html">Edit</a>`
        ];

        cells.forEach((cellContent, cellIndex) => {
            const newCell = newRow.insertCell(cellIndex);
            newCell.innerHTML = cellContent;
            newCell.style.paddingRight = '10px';
        });
    });
}


//       function replacePlayerList(players) {
//         console.log('new player list is: ',players);
//   // Create a new container with the updated player list
//         const newContainer = document.createElement('ol');
//         players.forEach((player) => {
//             const playerRow = document.createElement('li');
//             playerRow.classList.add('player-row');
//             const playerName = document.createElement('span');
//             playerName.classList.add('player-name');
//             playerName.textContent = player.name;
//             playerRow.appendChild(playerName);
//             // ... Add other player fields here ...
//             newContainer.appendChild(playerRow);
//         });
//         // Replace the existing player list with the new container
//         const oldContainer = document.querySelector('#player-table .player-list');
//         oldContainer.parentNode.replaceChild(newContainer, oldContainer);
// }
    </script>
</body>

</html>
