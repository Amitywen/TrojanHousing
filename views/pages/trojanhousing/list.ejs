<!-- by Amity Lu -->
<!DOCTYPE html>
<html lang="en">
<head>
    <!-- Your existing meta tags -->
    <style>
        /* Your existing CSS styles */
        .container {

            width: 1200px; /* Adjust the width as needed */
            height: 800px; /* Fixed height to prevent stretching */
            overflow-y: auto; /* Add a scrollbar if the content overflows vertically */
            margin: auto; /* Center the element horizontally */
            margin-top: 0px; /* Adjust the margin-top to center vertically */
            border: 2px solid #ffffff; /* Border color (black in this case) */
            border-radius: 10px; /* Border radius to create a circle */
            background-color: rgba(250, 246, 229, 0.8); /* Light beige background color */
            padding: 5px; /* Adjust the padding as needed */
            box-sizing: border-box; /* Include padding and border in the element's total width and height */
            display: flex;
            flex-direction: column; /* Stack child elements vertically */
            justify-content: flex-start; /* Align child elements to the start of the container */
            align-items: center; /* Center child elements horizontally */
        }
        .admin-page-title{           
            /* margin-top: 20px; */
            font-size: 36px; /* Increase the font size */
            color: #333; /* Set a specific text color */
            text-align: center; /* Center the text */
            text-transform: uppercase; /* Convert text to uppercase */
            margin-top: 20px; /* Add some top margin */
            margin-bottom: 20px; /* Add some bottom margin */
            /* Add more styles as needed */

        }
        .styled-table td {
            border: 1px solid #dddddd;
            text-align: left;
            padding: 8px;
        }
        .styled-table {
            border-collapse: collapse;
            width: 100%;
        }
        .styled-table th {
            background-color: #f2f2f2;
        }

        table {
            border-collapse: separate;
            border-spacing: center;
            margin-top: 5px; /* Adjust top margin as needed */
            width:100%
        } 
        /* .styled-table {
             border-collapse: collapse;
            width: 100%;
        } */

        td, th {
            vertical-align: middle;
            text-align: center;
        }


        .selection {
            display: flex;
            flex-direction: row;
            justify-content: center;
            align-items: center;
            width: 100%;
            height: 100%;
            font-family: 'Courier New', Courier, monospace;
            margin: 10px;
        }

        .selection select {
            margin-left: 20px;
            margin-right: 20px;
        }
    </style>
</head>

<body>
        <h1 class="admin-page-title"><br>Housing List</h1>
        <% if (Housinglist.length === 0) { %>
            <p>No property available.</p>
        <% } else { %>
            <!-- <input id="search-box" type="text" placeholder="Search by name"> -->
            <div class = selection>
                <h4>Location:</h4>
                <select id="Location">
                    <option value="">All</option>
                    <option value="downtown">Downtown</option>
                    <option value="ktown">Ktown</option>
                    <option value="UPS">UPS area</option>
                <!-- <option value="false">Unavaliable Housing</option> -->
                </select><br></br>
                
                <h4>nickname:</h4>
                <input id="nickname" type="text" placeholder="Search by nickname">
                <!-- <option value="false">Unavaliable Housing</option> -->
                </select><br></br>
            </div>
            
            
            <div class="container">
                <table class="styled-table">
                    <thead>
                        <tr>
                            <th>PropertyId</th>
                            <th>Address</th>
                            <th># of room</th>
                            <th>Rent(USD)</th>
                            <th>nickname</th>
                            <th>Location</th>
                            <th>securityDeposit(USD)</th>
                        </tr>
                    </thead>
                    <tbody class="housing-list">
                        <% Housinglist.forEach((unit) => { %>
                            <tr>
                                <td><%= unit._id %></td>
                                <td><%= unit.address %></td>
                                <td><%= unit.numberOfRooms %></td>
                                <td><%= unit.rent %></td>
                                <td><%= unit.nickname %></td>
                                <td><%= unit.location %></td>
                                <td><%= unit.securityDeposit %></td>
                            </tr>
                        <% }) %>
                    </tbody>
                </table>
            </div>
        <% } %>

    <script>
        document.addEventListener('DOMContentLoaded', async() => {
            const housingList = document.querySelector('.housing-list');
            console.log( housingList)
        });

        document.getElementById('nickname').addEventListener('keyup', (event) => {
            const searchQuery = event.target.value
            const location = document.getElementById('Location').value;
            return fetch(`/api/property?nickname=${encodeURIComponent(searchQuery)}&location${location}`, {
                method: 'GET'
            })
            .then(response => response.json())
            .then(replaceHousingList)
            .catch(error => { 
                console.error('Error fetching data:', error);
            });
        });

        document.getElementById('Location').addEventListener('change', (event) => {
            const location = document.getElementById('Location').value;

            const selectedValue = event.target.value;
            let apiUrl = '/api/property';
            apiUrl += `?houseType=${selectedValue}`;

            if (location !== '*') {
                apiUrl += `&location=${location}`;
            }

            fetch(apiUrl)
                .then(response => response.json())
                .then(replaceHousingList)
                .catch(error => {
                    console.error('Error fetching data:', error);
                });
        });

        function replaceHousingList(housing) {
            const housingList = document.querySelector('.housing-list');
            housingList.innerHTML = ''; // Clear the existing content
            console.log('Received data:', housing); // Log received data
            housing.forEach((unit) => {
                const houseRow = document.createElement('tr');
                houseRow.innerHTML = `
                    <td>${unit._id}</td>
                    <td>${unit.address}</td>
                    <td>${unit.numberOfRooms}</td>
                    <td>${unit.nickname}</td>
                    <td>${unit.rent}</td>
                    <td>${unit.location}</td>
                    <td>${unit.securityDeposit}</td>
                `;
                housingList.appendChild(houseRow);
            });
        }
    </script>
</body>
</html>