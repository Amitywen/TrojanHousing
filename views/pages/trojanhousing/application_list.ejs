
<!-- by Amity Lu -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Property Applications</title>

  <style>
    .whole-page-background-image{
       height: 80vh;
       width: 100vw;
       background-image: url('/images/USC_Village.jpg');
       /* background-color: rgba(255,255,255,0.5); */
       background-size: cover;
       background-position: center;
       background-repeat: no-repeat;
   }
   .whole-page-background-color{
       height: 80vh;
       width: 100vw;
       /* background-image: url('/images/USC_great_lawn.jpg'); */
       background-color: rgba(255,255,255,0.6);
       background-size: cover;
       background-position: center;
       background-repeat: no-repeat;
   }
   .admin-list {
       width: 1200px; /* Adjust the width as needed */
       height: 800px; /* Adjust the height as needed */
       margin: auto; /* Center the element horizontally */
       margin-top: 0px; /* Adjust the margin-top to center vertically */
       border: 2px solid #ffffff; /* Border color (black in this case) */
       border-radius: 10px; /* Border radius to create a circle */
       background-color: rgba(250, 246, 229, 0.8); /* Light beige background color */
       padding: 5px; /* Adjust the padding as needed */
       box-sizing: border-box; /* Include padding and border in the element's total width and height */
       display: flex;
       justify-content: center;
       align-items: top;
   }
    #search-box {
       padding: 5px;
       font-size: 16px;
   }

   #search-button {
       padding: 5px;
       font-size: 16px;
   }
   .styled-table {
       border-collapse: collapse;
       width: 100%;
   }

   .styled-table th,
   .styled-table td {
       border: 1px solid #dddddd;
       text-align: left;
       padding: 8px;
       text-align: center;
   }

   .styled-table th {
       background-color: #f2f2f2;
   }
   .admin-page-title{           
       /* margin-top: 20px; */
       font-size: 36px; /* Increase the font size */
       color: #333; /* Set a specific text color */
       text-align: center; /* Center the text */
       text-transform: uppercase; /* Convert text to uppercase */
       margin-top: 20px; /* Add some top margin */
       margin-bottom: 20px; /* Add some bottom margin */
       /* Add more styles as needed */

   }
   .error-message{           
       /* margin-top: 20px; */
       font-size: 15px; /* Increase the font size */
       color: rgb(255,0,0); /* Set a specific text color */
       text-align: center; /* Center the text */
       margin-top: 20px; /* Add some top margin */
       margin-bottom: 20px; /* Add some bottom margin */
       /* Add more styles as needed */

   }
   .admin-list {
       width: 1200px; /* Adjust the width as needed */
       height: 800px; /* Fixed height to prevent stretching */
       overflow-y: auto; /* Add a scrollbar if the content overflows vertically */
       margin: auto; /* Center the element horizontally */
       margin-top: 0px; /* Adjust the margin-top to center vertically */
       border: 2px solid #ffffff; /* Border color (black in this case) */
       border-radius: 10px; /* Border radius to create a circle */
       background-color: rgba(250, 246, 229, 0.8); /* Light beige background color */
       padding: 5px; /* Adjust the padding as needed */
       box-sizing: border-box; /* Include padding and border in the element's total width and height */
       display: flex;
       flex-direction: column; /* Stack child elements vertically */
       justify-content: flex-start; /* Align child elements to the start of the container */
       align-items: center; /* Center child elements horizontally */
   }
   .admin-button{
       width: 200px; /* Adjust the width as needed */
       height: 30px; /* Adjust the height as needed */
       background-color: #990000; /* Light beige background color */
       color:#ffffff;
       display: block;
       margin: auto; /* Center the button horizontally */
   }
</style>
</head>
<body>
    <div class="whole-page-background-color">
        <!-- <h1 class="admin-page-title">A Landlord User List</h1> -->
  <h1 class="admin-page-title">Applications for Property ID: <%= propertyId %></h1>


    <div class="admin-list">
        <%  if (applications.length > 0) { %>
            <table id="user-list" class="styled-table">
                
                <thread>
                    <tr>
                        <th>Application ID</th>
                        <th>Created At</th>
                        <th>Student ID</th>
                        <th>Accepted status</th>
                        <th>Delete?</th>
                    </tr>
                </thread>
                <tbody>
                <% applications.forEach(application => { %>
                            <tr>
                                <td><%= application._id %></td>
                                <td><%= application.created_at %></td>
                                <td> <%= application.studentId %></td>
                                <td><%= application.accepted ? 'Yes' : 'No' %></td>
                                <td><button id="deleteButton" class="deleteButton" data-property-id="<%= application._id %>">Delete</button></td>
                            </tr>
                <% }); %>
            </tbody>
            </table>
        <% } else { %>
            <p>No applications found for this property ID.</p>
        <% } %>
            
        <button id="back" class="back">Back to list</button>
        </div>


</div>
</div>
    <script>
            document.getElementById('back').addEventListener('click', async (event) => {
                event.preventDefault();
                const url = new URL(window.location.href);
                const propertyId = url.pathname.split('/')[2];
                try {
                    const response = await fetch(`/api/property?propertyId=${propertyId}`, {
                        method: 'GET',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                    });
                    if (response.ok) {
                        const responseData = await response.json();
                        const newURL = `/users/${responseData.landlordId}/list_property.html`;
                        // Navigate to the new URL
                        window.location.href = newURL;
                    } else {
                        const errorData = await response.json();
                        throw new Error(`Server Error: ${errorData.message}`);
                    }
                } catch (error) {
                    console.error('Error:', error);
                }

            })

            document.getElementById('deleteButton').addEventListener('click', async (event) => {
                event.preventDefault();
                const applicationyId = document.getElementById('deleteButton').getAttribute('data-property-id');

                try {
                    const response = await fetch(`/api/application/${applicationyId}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                    });
                        alert('Deleted');
                        window.location.reload(); 
                    // } else {
                    //     console.error(`Failed to delete property with ID ${propertyId}`);
                    //     // Handle deletion failure
                    // }
                } catch (error) {
                    console.error('Error:', error);
                }
            });
    </script>

</body>
</html>
