<!-- ./public/player/edit.html -->
<!DOCTYPE html>
<html lang="en">
<head>
    <style>
        .whole-page-background-image{
            height: 80vh;
            width: 100vw;
            background-image: url('/images/USC-Gold-Shield-scaled-1.jpg');
            /* background-color: rgba(255,255,255,0.5); */
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
        }
        .whole-page-background-color{
            height: 80vh;
            width: 100vw;
            /* background-image: url('/images/USC_great_lawn.jpg'); */
            background-color: rgba(255,255,255,0.7);
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
        }
        .form-submit-button{
            width: 100px; /* Adjust the width as needed */
            height: 30px; /* Adjust the height as needed */
            background-color: #990000; /* Light beige background color */
            color:#ffffff;
            display: block;
            margin: auto; /* Center the button horizontally */
            /* justify-content: center;
            align-items: center; */
        }
        .creating {
            /* border: 1px solid #ccc;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            background-color: #f9f9f9;
            width: 300px;
            display: flex;
            flex-direction: column;
            align-items: center; */
            /* text-align: left; Align text to the left */
            width: 800px; /* Adjust the width as needed */
            height: 450px; /* Adjust the height as needed */
            margin: auto; /* Center the element horizontally */
            margin-top: 10px; /* Adjust the margin-top to center vertically */
            border: 2px solid #ffffff; /* Border color (black in this case) */
            border-radius: 10px; /* Border radius to create a circle */
            background-color: rgba(250, 246, 229, 0.8); /* Light beige background color */
            padding: 5px; /* Adjust the padding as needed */
            box-sizing: border-box; /* Include padding and border in the element's total width and height */
            display: flex;
            justify-content: center;
            align-items: center;

        }
        .admin-page-title{           
            /* margin-top: 20px; */
            font-size: 36px; /* Increase the font size */
            color: #333; /* Set a specific text color */
            text-align: center; /* Center the text */
            text-transform: uppercase; /* Convert text to uppercase */
            margin-top: 20px; /* Add some top margin */
            margin-bottom: 20px; /* Add some bottom margin */
            /* Add more styles as needed */

        }
        </style>
    <meta charset="UTF-8">
    <title>Edit Housing</title>
    <link rel="stylesheet" href="/styles.css">
    <script>
        document.addEventListener('DOMContentLoaded',async () => {
            const url = new URL(window.location.href)
            const propertyId = url.pathname.split('/')[2];
            const modifyhousing = document.getElementById('modifyhousing');

            // const response = await fetch(`/api/property?propertyId=${propertyId}`, {
            //     method: 'GET',
            //     headers: {
            //     'Content-Type': 'application/json',
            //     }
            // }).then(response => response.json())
            // .then(setting)
            // .catch(error => {
            //         console.error('Error fetching data:', error);
            //     });

            // function setting(input){
            //     console.log('print by setting')
            //     console.log(input)
            // }
            // console.log(responseID)
            deleteButton.addEventListener('click', async () => {
            try {

                const response = await fetch(`/api/property/${propertyId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                });

                if (response.ok) {
                    console.log(`Property with ID ${propertyId} deleted successfully`);
                    // Redirect to a relevant page after deletion
                    // window.location.href = '/users/${landlordId}/list_property.html';
                    alert('Deleted')
                } else {
                    console.error(`Failed to delete property with ID ${propertyId}`);
                    // Handle deletion failure
                }
            } catch (error) {
                console.error('Error:', error);
            }
            });

            modifyhousing.addEventListener('submit', async (event) => {
                event.preventDefault(); // Prevent the default form submission

                const url = new URL(window.location.href)
                const propertyId = url.pathname.split('/')[2];

                // Perform your client-side validation here
                const address = document.getElementById('address');
                const numberOfRooms = document.getElementById('numberOfRooms');
                const rent = document.getElementById('rent');
                const securityDeposit= document.getElementById('securityDeposit');
                const summary = document.getElementById('summary');
                const nickname = document.getElementById('nickname');
                const location = document.getElementById('location' );
                const taken = document.getElementById('taken');
                // Construct the request body
                const requestBody = {
                        address: address.value,
                        numberOfRooms: numberOfRooms.value,
                        rent: rent.value, 
                        securityDeposit: securityDeposit.value, 
                        summary: summary.value,
                        nickname: nickname.value,
                        location: location.value,
                        taken: taken.value
                        // redirect: '/players.html', not sure whethe is going?
                    };
                // Send the data to the server using fetch
                try {
                    const response = await fetch(`/api/property/${propertyId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(requestBody),
                    });

                    if (response.ok) {
                        // Form submission successful, you can redirect the user
                        // const landlordId = document.getElementById('landlordId');
                        // console.log(`propertyId with ID ${propertyId} modified successfully`);
                        // window.location.href = `/users/${userId}/list_property.html`;
                        // this has problem
                        // window.location.href = '/users/${landlordId}/list_property.html';
                        alert('Modified')
                    } else {
                        const errorData = await response.json();
                        alert(`Server Error: ${errorData.message}`);
                    }
                } catch (error) {
                    alert('An error occurred while communicating with the server.');
                }
            });
        });
    </script>
</head>
<body>
    <div class="whole-page-background-image">
        <div class="whole-page-background-color">
        <h1 class="admin-page-title"><br>Edit Property</h1>
                <div class = "creating">
                <form id="modifyhousing">
                    <!-- <label for="landlordId">Landlord ID:</label>
                    <input type="text" id="landlordId" name="landlordId">
                    <br> -->
                    <br>
                    <label for="address">address:</label>
                    <input type="text" id="address" name="address"> 
                <br>
                    <br>
                    <label for="numberOfRooms">numberOfRooms:</label>
                    <input type="number" id="numberOfRooms" name="numberOfRooms">
                    <br>
                    <br>
                    <label for="rent">rent:</label>
                    <input type="number" id="rent" name="rent"> 
                    <br>
                    <br>
                    <label for="securityDeposit">securityDeposit:</label>
                    <input type="number" id="securityDeposit" name="securityDeposit">
                    <br>
                    <br>
                    <label for="summary">summary:</label>
                    <input type="text" id="summary" name="summary"> 
                    <br>
                    <br>
                    <label for="nickname">nickname:</label>
                    <input type="text" id="nickname" name="nickname"> 
                    <br>
                    <br>
                    <label for="location">location:</label>
                    <select id="location" name="location" > 
                        <option value="downtown">Downtown</option>
                        <option value="ktown">Ktown</option>
                        <option value="UPS">UPS area</option>
                    </select>
                    <br>
                    <br>
                    <label for="taken">Taken:</label>
                    <input type="checkbox" id="taken" name="taken">
                    <!-- Other input fields for creating a new property -->
                    <br>
                    <br>
                    <button type="submit"> Save Changes </button>

                    <button id="deleteButton" class="deleteButton">Delete</button>
            </div>
        <!-- <button class="deleteButton">Delete</button> -->
        <!-- <button id="deleteButton" class="deleteButton">Delete</button> -->
    </div>
</div>
    </body>
</html>
